{"version":3,"sources":["../src/components.js"],"names":["React","PropTypes","MediaQuery","connect","breakPoints","MediaQueryWrapper","props","dispatch","fakeWidth","children","other","values","deviceWidth","width","propTypes","oneOfType","node","func","isRequired","number","defaultProps","responsiveWrapper","state","responsive","PhoneScreen","maxWidth","phone","TabletScreen","query","tablet","DesktopScreen","minWidth","MobileScreen","PhoneScreenHidden","TabletScreenHidden","DesktopScreenHidden","MobileScreenHidden"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEO,IAAMC,oBAAoB,SAApBA,iBAAoB,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;;AAC/C;AAD+C,MAG7CC,QAH6C,GAI3CD,KAJ2C,CAG7CC,QAH6C;AAAA,MAGnCC,SAHmC,GAI3CF,KAJ2C,CAGnCE,SAHmC;AAAA,MAGxBC,QAHwB,GAI3CH,KAJ2C,CAGxBG,QAHwB;AAAA,MAGXC,KAHW,4BAI3CJ,KAJ2C;;AAK/C,MAAMK,SAAS;AAAEC,iBAAaJ,SAAf;AAA0BK,WAAOL;AAAjC,GAAf;AACA,SACE,oBAAC,UAAD,eAAgBE,KAAhB,EAA2B;AAAEC;AAAF,GAA3B,GACGF,QADH,CADF;AAKD,CAXM;;;AAaPJ,kBAAkBS,SAAlB,GAA8B;AAC5BL,YAAUR,UAAUc,SAAV,CAAoB,CAACd,UAAUe,IAAX,EAAiBf,UAAUgB,IAA3B,CAApB,CADkB;AAE5BV,YAAUN,UAAUgB,IAAV,CAAeC,UAFG;AAG5BV,aAAWP,UAAUkB,MAAV,CAAiBD;AAHA,CAA9B;AAMAb,kBAAkBe,YAAlB,GAAiC;AAC/BX,YAAU;AADqB,CAAjC;AAIA,OAAO,IAAMY,oBAAoB,SAApBA,iBAAoB;AAAA,MAACf,KAAD,uEAAS,EAAT;AAAA,SAC/BH,QAAQ;AAAA;AAAYK,iBAAWc,MAAMC,UAAN,CAAiBf;AAAxC,OAAsDF,KAAtD;AAAA,GAAR,EAAwED,iBAAxE,CAD+B;AAAA,CAA1B;AAGP,OAAO,IAAMmB,cAAcH,kBAAkB;AAAEI,YAAUrB,YAAYsB;AAAxB,CAAlB,CAApB;AACP,OAAO,IAAMC,eAAeN,kBAAkB;AAAEO,+BAAsBxB,YAAYsB,KAAZ,GAAoB,CAA1C,iCAAkEtB,YAAYyB,MAA9E;AAAF,CAAlB,CAArB;AACP,OAAO,IAAMC,gBAAgBT,kBAAkB;AAAEU,YAAU3B,YAAYyB,MAAZ,GAAqB;AAAjC,CAAlB,CAAtB;AACP,OAAO,IAAMG,eAAeX,kBAAkB;AAAEI,YAAUrB,YAAYyB;AAAxB,CAAlB,CAArB;AAEP,OAAO,IAAMI,oBAAoBZ,kBAAkB;AAAEU,YAAU3B,YAAYsB,KAAZ,GAAoB;AAAhC,CAAlB,CAA1B;AACP,OAAO,IAAMQ,qBAAqBb,kBAAkB;AAAEO,+BAAsBxB,YAAYsB,KAAlC,8BAA2DtB,YAAYyB,MAAZ,GAAqB,CAAhF;AAAF,CAAlB,CAA3B;AACP,OAAO,IAAMM,sBAAsBd,kBAAkB;AAAEI,YAAUrB,YAAYyB;AAAxB,CAAlB,CAA5B;AACP,OAAO,IAAMO,qBAAqBf,kBAAkB;AAAEU,YAAU3B,YAAYyB,MAAZ,GAAqB;AAAjC,CAAlB,CAA3B","file":"components.js","sourcesContent":["// see also components/ScreenSize for another way to consume this data\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport MediaQuery from 'react-responsive'\nimport { connect } from 'react-redux'\nimport { breakPoints } from './defaults'\n\nexport const MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const {\n    dispatch, fakeWidth, children, ...other\n  } = props\n  const values = { deviceWidth: fakeWidth, width: fakeWidth }\n  return (\n    <MediaQuery {...other} {...{ values }} >\n      {children}\n    </MediaQuery>\n  )\n}\n\nMediaQueryWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dispatch: PropTypes.func.isRequired,\n  fakeWidth: PropTypes.number.isRequired,\n}\n\nMediaQueryWrapper.defaultProps = {\n  children: null,\n}\n\nexport const responsiveWrapper = (props = {}) =>\n  connect(state => ({ fakeWidth: state.responsive.fakeWidth, ...props }))(MediaQueryWrapper)\n\nexport const PhoneScreen = responsiveWrapper({ maxWidth: breakPoints.phone })\nexport const TabletScreen = responsiveWrapper({ query: `(min-width: ${breakPoints.phone + 1}px) and (max-width: ${breakPoints.tablet}px)` })\nexport const DesktopScreen = responsiveWrapper({ minWidth: breakPoints.tablet + 1 })\nexport const MobileScreen = responsiveWrapper({ maxWidth: breakPoints.tablet })\n\nexport const PhoneScreenHidden = responsiveWrapper({ minWidth: breakPoints.phone + 1 })\nexport const TabletScreenHidden = responsiveWrapper({ query: `(max-width: ${breakPoints.phone}px), (min-width: ${breakPoints.tablet + 1}px)` })\nexport const DesktopScreenHidden = responsiveWrapper({ maxWidth: breakPoints.tablet })\nexport const MobileScreenHidden = responsiveWrapper({ minWidth: breakPoints.tablet + 1 })\n"]}