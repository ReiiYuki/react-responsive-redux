{"version":3,"sources":["../src/components.js"],"names":["MediaQueryWrapper","props","dispatch","fakeWidth","children","other","values","deviceWidth","width","propTypes","PropTypes","oneOfType","node","func","component","string","isRequired","number","defaultProps","responsiveWrapper","state","responsive","XsScreen","maxWidth","breakPoints","sm","SmScreen","query","md","MdScreen","lg","LgScreen","XsScreenHidden","minWidth","SmScreenHidden","MdScreenHidden","LgScreenHidden","DesktopScreen","MobileScreen"],"mappings":";;;;;;;;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEO,IAAMA,oBAAoB,SAApBA,iBAAoB,GAAgB;AAAA,MAAfC,KAAe,uEAAP,EAAO;AAAA,MAG7CC,QAH6C,GAI3CD,KAJ2C,CAG7CC,QAH6C;AAAA,MAGnCC,SAHmC,GAI3CF,KAJ2C,CAGnCE,SAHmC;AAAA,MAGxBC,QAHwB,GAI3CH,KAJ2C,CAGxBG,QAHwB;AAAA,MAGXC,KAHW,0CAI3CJ,KAJ2C;AAK/C,MAAMK,SAAS;AAAEC,iBAAaJ,SAAf;AAA0BK,WAAOL;AAAjC,GAAf;AACA,SACE,6BAAC,wBAAD,6BAAgBE,KAAhB,EAA2B;AAAEC;AAAF,GAA3B,GACGF,QADH,CADF;AAKD,CAXM;;;AAaPJ,kBAAkBS,SAAlB,GAA8B;AAC5BL,YAAUM,mBAAUC,SAAV,CAAoB,CAACD,mBAAUE,IAAX,EAAiBF,mBAAUG,IAA3B,CAApB,CADkB;AAE5BC,aAAWJ,mBAAUC,SAAV,CAAoB,CAC7BD,mBAAUE,IADmB,EAE7BF,mBAAUG,IAFmB,EAG7BH,mBAAUK,MAHmB,CAApB,CAFiB;AAO5Bb,YAAUQ,mBAAUG,IAAV,CAAeG,UAPG;AAQ5Bb,aAAWO,mBAAUO,MAAV,CAAiBD;AARA,CAA9B;AAWAhB,kBAAkBkB,YAAlB,GAAiC;AAC/Bd,YAAU,IADqB;AAE/BU,aAAW;AAFoB,CAAjC;;AAKO,IAAMK,oBAAoB,SAApBA,iBAAoB;AAAA,MAAClB,KAAD,uEAAS,EAAT;AAAA,SAAgB,yBAAQ;AAAA;AACvDE,iBAAWiB,MAAMC,UAAN,CAAiBlB;AAD2B,OACbF,KADa;AAAA,GAAR,EAE7CD,iBAF6C,CAAhB;AAAA,CAA1B;;;AAIA,IAAMsB,WAAWH,kBAAkB;AAAEI,YAAUC,sBAAYC,EAAZ,GAAiB;AAA7B,CAAlB,CAAjB;;AACA,IAAMC,WAAWP,kBAAkB;AACxCQ,+BAAsBH,sBAAYC,EAAlC,iCAA2DD,sBAAYI,EAAZ,GACvD,CADJ;AADwC,CAAlB,CAAjB;;AAIA,IAAMC,WAAWV,kBAAkB;AACxCQ,+BAAsBH,sBAAYI,EAAlC,iCAA2DJ,sBAAYM,EAAZ,GACvD,CADJ;AADwC,CAAlB,CAAjB;;AAIA,IAAMC,WAAWZ,kBAAkB;AACxCQ,+BAAsBH,sBAAYM,EAAlC;AADwC,CAAlB,CAAjB;;AAIA,IAAME,iBAAiBb,kBAAkB;AAAEc,YAAUT,sBAAYC;AAAxB,CAAlB,CAAvB;;AACA,IAAMS,iBAAiBf,kBAAkB;AAC9CQ,+BAAsBH,sBAAYC,EAAZ,GAAiB,CAAvC,8BACED,sBAAYI,EADd;AAD8C,CAAlB,CAAvB;;AAKA,IAAMO,iBAAiBhB,kBAAkB;AAC9CQ,+BAAsBH,sBAAYI,EAAZ,GAAiB,CAAvC,8BACEJ,sBAAYM,EADd;AAD8C,CAAlB,CAAvB;;AAKA,IAAMM,iBAAiBjB,kBAAkB;AAC9CI,YAAUC,sBAAYM,EAAZ,GAAiB;AADmB,CAAlB,CAAvB;;AAMA,IAAMO,gBAAgBlB,kBAAkB;AAAEc,YAAUT,sBAAYI;AAAxB,CAAlB,CAAtB;;AACA,IAAMU,eAAenB,kBAAkB;AAAEI,YAAUC,sBAAYI,EAAZ,GAAiB;AAA7B,CAAlB,CAArB","sourcesContent":["// see also components/ScreenSize for another way to consume this data\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport MediaQuery from 'react-responsive'\nimport { connect } from 'react-redux'\nimport { breakPoints } from './defaults'\n\nexport const MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const {\n    dispatch, fakeWidth, children, ...other\n  } = props\n  const values = { deviceWidth: fakeWidth, width: fakeWidth }\n  return (\n    <MediaQuery {...other} {...{ values }}>\n      {children}\n    </MediaQuery>\n  )\n}\n\nMediaQueryWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  component: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.string,\n  ]),\n  dispatch: PropTypes.func.isRequired,\n  fakeWidth: PropTypes.number.isRequired,\n}\n\nMediaQueryWrapper.defaultProps = {\n  children: null,\n  component: 'div',\n}\n\nexport const responsiveWrapper = (props = {}) => connect(state => ({\n  fakeWidth: state.responsive.fakeWidth, ...props,\n}))(MediaQueryWrapper)\n\nexport const XsScreen = responsiveWrapper({ maxWidth: breakPoints.sm - 1 })\nexport const SmScreen = responsiveWrapper({\n  query: `(min-width: ${breakPoints.sm}px) and (max-width: ${breakPoints.md\n    - 1}px)`,\n})\nexport const MdScreen = responsiveWrapper({\n  query: `(min-width: ${breakPoints.md}px) and (max-width: ${breakPoints.lg\n    - 1}px)`,\n})\nexport const LgScreen = responsiveWrapper({\n  query: `(min-width: ${breakPoints.lg}px)`,\n})\n\nexport const XsScreenHidden = responsiveWrapper({ minWidth: breakPoints.sm })\nexport const SmScreenHidden = responsiveWrapper({\n  query: `(max-width: ${breakPoints.sm - 1}px), (min-width: ${\n    breakPoints.md\n  }px)`,\n})\nexport const MdScreenHidden = responsiveWrapper({\n  query: `(max-width: ${breakPoints.md - 1}px), (min-width: ${\n    breakPoints.lg\n  }px)`,\n})\nexport const LgScreenHidden = responsiveWrapper({\n  maxWidth: breakPoints.lg - 1,\n})\n\nexport { XsScreen as PhoneScreen }\nexport { SmScreen as TabletScreen }\nexport const DesktopScreen = responsiveWrapper({ minWidth: breakPoints.md })\nexport const MobileScreen = responsiveWrapper({ maxWidth: breakPoints.md - 1 })\n\nexport { XsScreenHidden as PhoneScreenHidden }\nexport { SmScreenHidden as TabletScreenHidden }\nexport { MobileScreen as DesktopScreenHidden }\nexport { DesktopScreen as MobileScreenHidden }\n"],"file":"components.js"}