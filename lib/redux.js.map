{"version":3,"sources":["../src/redux.js"],"names":["SET_MOBILE_DETECT","setMobileDetect","phone","tablet","mobile","desktop","type","defaultSize","dektop","initialState","fakeWidth","reducer","state","action"],"mappings":";;;;;;;;;;;AAAA;;AAEO,IAAMA,oBAAoB,4CAA1B;;;AAEA,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,iFAE3B,EAF2B;AAAA,MAC7BC,KAD6B,QAC7BA,KAD6B;AAAA,MACtBC,MADsB,QACtBA,MADsB;AAAA,MACdC,MADc,QACdA,MADc;AAAA,MACNC,OADM,QACNA,OADM;;AAAA,SAEnB;AACVC,UAAMN,iBADI;AACeE,gBADf;AACsBC,kBADtB;AAC8BC,kBAD9B;AACsCC;AADtC,GAFmB;AAAA,CAAxB,C,CAMP;AACA;AAEA;;;;AACO,IAAME,cAAc,sBAAYC,MAAhC;;AAEA,IAAMC,eAAe;AAC1BP,SAAO,KADmB;AAE1BC,UAAQ,KAFkB;AAG1BC,UAAQ,KAHkB;AAI1BC,WAAS,KAJiB;AAK1BK,aAAWH;AALe,CAArB;;;AAQA,IAAMI,UAAU,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACvD,UAAQA,OAAOP,IAAf;AACA,SAAKN,iBAAL;AAAwB;AACtB;AADsB,8DAIbS,YAJa,EAIII,MAJJ;AAAA,YAGpBT,MAHoB,wBAGpBA,MAHoB;AAAA,YAGZD,MAHY,wBAGZA,MAHY;AAAA,YAGJD,KAHI,wBAGJA,KAHI;AAAA,YAGGG,OAHH,wBAGGA,OAHH;;AAMtB,YAAIK,SAAJ;;AAEA,YAAIN,MAAJ,EAAY;AACV,cAAIF,KAAJ,EAAW;AACTQ,wBAAY,sBAAYR,KAAxB;AACD,WAFD,MAEO,IAAIC,MAAJ,EAAY;AACjBO,wBAAY,sBAAYP,MAAxB;AACD,WAFM,MAEA;AACL;AACAO,wBAAY,sBAAYR,KAAxB;AACD;AACF,SATD,MASO,IAAIG,OAAJ,EAAa;AAClBK,sBAAY,sBAAYL,OAAxB;AACD,SAFM,MAEA;AACL;AACAK,sBAAYH,WAAZ;AACD;;AAED,0CACKK,KADL;AACYR,wBADZ;AACoBD,wBADpB;AAC4BD,sBAD5B;AACmCG,0BADnC;AAC4CK;AAD5C;AAGD;;AACD;AACE,aAAOE,KAAP;AA9BF;AAgCD,CAjCM","file":"redux.js","sourcesContent":["import { breakPoints } from './defaults'\n\nexport const SET_MOBILE_DETECT = '@@react-responsive-redux/SET_MOBILE_DETECT'\n\nexport const setMobileDetect = ({\n  phone, tablet, mobile, desktop,\n} = {}) => ({\n  type: SET_MOBILE_DETECT, phone, tablet, mobile, desktop,\n})\n\n// TODO - allow users to pass this in - we have to share it with our components\n// too though so maybe we need a getter/setter on our entire class?\n\n// default to a desktop size if in doubt\nexport const defaultSize = breakPoints.dektop\n\nexport const initialState = {\n  phone: false,\n  tablet: false,\n  mobile: false,\n  desktop: false,\n  fakeWidth: defaultSize,\n}\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case SET_MOBILE_DETECT: {\n    // use initialState as the default values\n    const {\n      mobile, tablet, phone, desktop,\n    } = { ...initialState, ...action }\n\n    let fakeWidth\n\n    if (mobile) {\n      if (phone) {\n        fakeWidth = breakPoints.phone\n      } else if (tablet) {\n        fakeWidth = breakPoints.tablet\n      } else {\n        // TODO - should we ever get here? default to the lowest value i guess\n        fakeWidth = breakPoints.phone\n      }\n    } else if (desktop) {\n      fakeWidth = breakPoints.desktop\n    } else {\n      // nothing set, default to our defaultSize\n      fakeWidth = defaultSize\n    }\n\n    return {\n      ...state, mobile, tablet, phone, desktop, fakeWidth,\n    }\n  }\n  default:\n    return state\n  }\n}\n"]}