{"version":3,"sources":["../src/redux.js"],"names":["SET_MOBILE_DETECT","setMobileDetect","phone","tablet","mobile","desktop","type","defaultSize","initialState","fakeWidth","reducer","state","action"],"mappings":";;;;;;;;;AAAA;;AAEO,IAAMA,gDAAoB,4CAA1B;;AAEA,IAAMC,4CAAkB,SAAlBA,eAAkB;AAAA,iFAE3B,EAF2B;AAAA,MAC7BC,KAD6B,QAC7BA,KAD6B;AAAA,MACtBC,MADsB,QACtBA,MADsB;AAAA,MACdC,MADc,QACdA,MADc;AAAA,MACNC,OADM,QACNA,OADM;;AAAA,SAEnB;AACVC,UAAMN,iBADI,EACeE,YADf,EACsBC,cADtB,EAC8BC,cAD9B,EACsCC;AADtC,GAFmB;AAAA,CAAxB;;AAMP;AACA;;AAEA;AACO,IAAME,oCAAc,sBAAYJ,MAAZ,GAAqB,CAAzC;;AAEA,IAAMK,sCAAe;AAC1BN,SAAO,KADmB;AAE1BC,UAAQ,KAFkB;AAG1BC,UAAQ,KAHkB;AAI1BC,WAAS,KAJiB;AAK1BI,aAAWF;AALe,CAArB;;AAQA,IAAMG,4BAAU,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACvD,UAAQA,OAAON,IAAf;AACA,SAAKN,iBAAL;AAAwB;AACtB;AADsB,gDAIbQ,YAJa,EAIII,MAJJ;AAAA,YAGpBR,MAHoB,wBAGpBA,MAHoB;AAAA,YAGZD,MAHY,wBAGZA,MAHY;AAAA,YAGJD,KAHI,wBAGJA,KAHI;AAAA,YAGGG,OAHH,wBAGGA,OAHH;;AAMtB,YAAII,kBAAJ;;AAEA,YAAIL,MAAJ,EAAY;AACV,cAAIF,KAAJ,EAAW;AACTO,wBAAY,sBAAYP,KAAxB;AACD,WAFD,MAEO,IAAIC,MAAJ,EAAY;AACjBM,wBAAY,sBAAYN,MAAxB;AACD,WAFM,MAEA;AACL;AACAM,wBAAY,sBAAYP,KAAxB;AACD;AACF,SATD,MASO,IAAIG,OAAJ,EAAa;AAClBI,sBAAY,sBAAYN,MAAZ,GAAqB,CAAjC;AACD,SAFM,MAEA;AACL;AACAM,sBAAYF,WAAZ;AACD;;AAED,4BACKI,KADL,IACYP,cADZ,EACoBD,cADpB,EAC4BD,YAD5B,EACmCG,gBADnC,EAC4CI;AAD5C;AAGD;AACD;AACE,aAAOE,KAAP;AA9BF;AAgCD,CAjCM","file":"redux.js","sourcesContent":["import { breakPoints } from './defaults'\n\nexport const SET_MOBILE_DETECT = '@@react-responsive-redux/SET_MOBILE_DETECT'\n\nexport const setMobileDetect = ({\n  phone, tablet, mobile, desktop,\n} = {}) => ({\n  type: SET_MOBILE_DETECT, phone, tablet, mobile, desktop,\n})\n\n// TODO - allow users to pass this in - we have to share it with our components\n// too though so maybe we need a getter/setter on our entire class?\n\n// default to a desktop size if in doubt\nexport const defaultSize = breakPoints.tablet + 1\n\nexport const initialState = {\n  phone: false,\n  tablet: false,\n  mobile: false,\n  desktop: false,\n  fakeWidth: defaultSize,\n}\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case SET_MOBILE_DETECT: {\n    // use initialState as the default values\n    const {\n      mobile, tablet, phone, desktop,\n    } = { ...initialState, ...action }\n\n    let fakeWidth\n\n    if (mobile) {\n      if (phone) {\n        fakeWidth = breakPoints.phone\n      } else if (tablet) {\n        fakeWidth = breakPoints.tablet\n      } else {\n        // TODO - should we ever get here? default to the lowest value i guess\n        fakeWidth = breakPoints.phone\n      }\n    } else if (desktop) {\n      fakeWidth = breakPoints.tablet + 1\n    } else {\n      // nothing set, default to our defaultSize\n      fakeWidth = defaultSize\n    }\n\n    return {\n      ...state, mobile, tablet, phone, desktop, fakeWidth,\n    }\n  }\n  default:\n    return state\n  }\n}\n"]}